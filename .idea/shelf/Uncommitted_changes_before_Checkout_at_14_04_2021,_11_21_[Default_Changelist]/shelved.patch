Index: src/main/java/dk/dtu/compute/se/pisd/roborally/controller/ConveyorBelt.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\n *  This file is part of the initial project provided for the\n *  course \"Project in Software Development (02362)\" held at\n *  DTU Compute at the Technical University of Denmark.\n *\n *  Copyright (C) 2019, 2020: Ekkart Kindler, ekki@dtu.dk\n *\n *  This software is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; version 2 of the License.\n *\n *  This project is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License\n *  along with this project; if not, write to the Free Software\n *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n *\n */\npackage dk.dtu.compute.se.pisd.roborally.controller;\n\nimport dk.dtu.compute.se.pisd.roborally.model.Board;\nimport dk.dtu.compute.se.pisd.roborally.model.Heading;\nimport dk.dtu.compute.se.pisd.roborally.model.Player;\nimport dk.dtu.compute.se.pisd.roborally.model.Space;\nimport org.jetbrains.annotations.NotNull;\n\n/**\n * ...\n *\n * @author Ekkart Kindler, ekki@dtu.dk\n *\n */\npublic class ConveyorBelt extends FieldAction {\n\n    private Heading heading;\n\n    public Heading getHeading() {\n        return heading;\n    }\n\n    public void setHeading(Heading heading) {\n        this.heading = heading;\n    }\n\n    @Override\n    public boolean doAction(@NotNull GameController gameController, @NotNull Space space) {\n        // TODO needs to be implemented\n        Player currentPlayer = space.getPlayer();\n        Space neighbourSpace = space.getNeighbourSpace(this.heading);\n\n        currentPlayer.setHeading(this.heading);\n\n        if (neighbourSpace.getPlayer() != null) {\n            return false;\n        } else {\n\n            currentPlayer.setSpace(neighbourSpace);\n\n            for (FieldAction action : neighbourSpace.actions) {\n                if (action instanceof ConveyorBelt && ((ConveyorBelt) action).getHeading() != this.heading.opposite()) {\n                    action.doAction(gameController, currentPlayer.getSpace());\n                }\n            }\n\n            return true;\n        }\n\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/dk/dtu/compute/se/pisd/roborally/controller/ConveyorBelt.java	(revision d33089f9cb6df9717e1e7ba82e812ba396ec5c15)
+++ src/main/java/dk/dtu/compute/se/pisd/roborally/controller/ConveyorBelt.java	(date 1618392007597)
@@ -44,29 +44,45 @@
     public void setHeading(Heading heading) {
         this.heading = heading;
     }
-
     @Override
     public boolean doAction(@NotNull GameController gameController, @NotNull Space space) {
         // TODO needs to be implemented
-        Player currentPlayer = space.getPlayer();
-        Space neighbourSpace = space.getNeighbourSpace(this.heading);
+        Player player = space.getPlayer();
+        Heading space1 = getHeading();
 
-        currentPlayer.setHeading(this.heading);
+        player.setHeading(this.heading);
 
-        if (neighbourSpace.getPlayer() != null) {
+        if (space1 != null) {
             return false;
         } else {
-
-            currentPlayer.setSpace(neighbourSpace);
-
-            for (FieldAction action : neighbourSpace.actions) {
-                if (action instanceof ConveyorBelt && ((ConveyorBelt) action).getHeading() != this.heading.opposite()) {
-                    action.doAction(gameController, currentPlayer.getSpace());
-                }
-            }
-
+            player.setSpace(space.getNeighbourSpace(this.heading));
             return true;
         }
 
+
+
+
+
+//
+//        Player currentPlayer = space.getPlayer();
+//        Space neighbourSpace = space.getNeighbourSpace(this.heading);
+//
+//        currentPlayer.setHeading(this.heading);
+//
+//        if (neighbourSpace.getPlayer() != null) {
+//            return false;
+//        } else {
+//
+//            currentPlayer.setSpace(neighbourSpace);
+//
+//            for (FieldAction action : neighbourSpace.actions) {
+//                if (action instanceof ConveyorBelt && ((ConveyorBelt) action).getHeading() != this.heading.opposite()) {
+//                    action.doAction(gameController, currentPlayer.getSpace());
+//                }
+//            }
+//
+//            return true;
+//        }
+
     }
 }
